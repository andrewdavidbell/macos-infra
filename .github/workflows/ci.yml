name: CI

on:
  push:
    branches:
      - '!master'
  pull_request:
    branches:
      - master

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: Test Ansible provisioning
    runs-on: macos-latest
    env:
      INVENTORY: work
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Install Ansible
        run: brew install ansible

      - run: ansible --version

      - name: Verify the playbook's syntax
        run: ansible-playbook --inventory ${INVENTORY} --syntax-check site.yml

      - name: Test the playbook
        run: ansible-playbook --inventory ${INVENTORY} site.yml

      - name: Test the playbook's idempotence
        run: |
          output=$(mktemp)
          ansible-playbook --inventory ${INVENTORY} site.yml | tee ${output}

          any_changes=$(tail ${output} | grep -q 'changed=0.*failed=0')
          echo "any_changes: [${any_changes}]" >> $GITHUB_OUTPUT

          # if [[ "${anything_changed}" -gt 0 ]]; then
          #   echo "Playbook not idempotent!" >> $GITHUB_OUTPUT
          #   # TODO fix up playbook
          #   # exit 1
          # fi;

      - run: echo "üçè This job's status is ${{ job.status }}."

